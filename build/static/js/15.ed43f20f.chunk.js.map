{"version":3,"sources":["components/TagsList/TagsList.js","utils/filter-tags.js","pages/Calendar/locales/RU.js","pages/Calendar/Calendar.js","api/afisha-page.js"],"names":["TagsList","filterList","name","handleClick","classNames","sectionClass","join","trim","classNamesList","length","className","map","item","value","filter","title","isActive","onClick","defaultProps","handleCheckboxBehavior","setState","inputValue","isChecked","stateFilters","filterItem","handleRadioBehavior","selectOneTag","tagName","deselectOneTag","deselectAllTags","calendarPageTexts","headTitle","MAIN_PAGE_TITLE","AFISHA_TITLE","headDescription","textStubNoData","PAGE_SIZE_PAGINATE","small","medium","big","maxScreenWidth","Calendar","currentUser","useContext","CurrentUserContext","PopupsContext","openPopupLogin","openPopupAboutEvent","openPopupError","setError","ErrorsContext","state","useLocation","useState","isLoading","setIsLoading","isGlobalLoader","setIsGlobalLoader","isLoadingPaginate","setIsLoadingPaginate","calendarPageData","setCalendarPageData","filters","setFilters","isFiltersUsed","setIsFiltersUsed","pageSize","setPageSize","totalPages","setTotalPages","pageIndex","setPageIndex","isFirstRender","setIsFirstRender","isPageError","setIsPageError","useEffect","window","matchMedia","listener","matches","addEventListener","removeEventListener","areThereEventsMoreForOneMonth","getActiveFilters","getPageData","offset","activeFilters","limit","months","axios","get","baseURL","apiUrl","params","then","response","data","catch","err","Promise","reject","Error","message","getCalendarPageData","events","results","count","Math","ceil","ERROR_MESSAGES","filterErrorMessage","finally","handleFilterButtonClick","id","res","setLocalStorageData","localStAfishaEvent","monthsTags","customFilters","tag","changeCaseOfFirstLetter","city","debounceFiltration","useDebounce","activeMonths","DELAY_DEBOUNCE","debouncePaginate","useEventBooking","handleEventBooking","selectedEvent","isWaitingResponse","event","BasePage","AnimatedPageContainer","titleText","generalErrorMessage","isPaginate","cardData","CardCalendar","onEventSignUpClick","onEventDescriptionClick","loadingEventId","getLocalStorageData","undefined","pageCount","onChange","renderPageContent","isCentered"],"mappings":"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","file":"static/js/15.ed43f20f.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PseudoButtonTag } from '../utils';\nimport './TagsList.scss';\n\nconst centeringFiltersMaxLength = 3;\n\nfunction TagsList({ filterList, name, handleClick, sectionClass }) {\n  const classNames = ['tags', sectionClass].join(' ').trim();\n  const classNamesList = [\n    'tags__list',\n    filterList.length > centeringFiltersMaxLength ? 'tags__list_mobile' : '',\n  ]\n    .join(' ')\n    .trim();\n\n  return (\n    <div className={classNames}>\n      <ul className={classNamesList}>\n        {filterList.map((item) => (\n          <li className=\"tags__list-item\" key={item?.name}>\n            <PseudoButtonTag\n              name={name}\n              value={item?.filter}\n              title={item?.name}\n              isActive={item?.isActive}\n              onClick={handleClick}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nTagsList.propTypes = {\n  filterList: PropTypes.arrayOf(PropTypes.any),\n  sectionClass: PropTypes.string,\n  name: PropTypes.string,\n  handleClick: PropTypes.func,\n};\n\nTagsList.defaultProps = {\n  filterList: [],\n  sectionClass: '',\n  name: '',\n  handleClick: () => {},\n};\n\nexport default TagsList;\n","/* eslint-disable no-param-reassign */\nexport const handleCheckboxBehavior = (setState, { inputValue, isChecked }) => {\n  setState((stateFilters) =>\n    stateFilters.map((filterItem) => {\n      if (filterItem.filter === inputValue) {\n        filterItem.isActive = isChecked;\n      }\n      return filterItem;\n    })\n  );\n};\n\nexport const handleRadioBehavior = (setState, { inputValue, isChecked }) => {\n  setState((stateFilters) =>\n    stateFilters.map((filterItem) => {\n      if (filterItem.filter === inputValue) {\n        filterItem.isActive = isChecked;\n      } else {\n        filterItem.isActive = false;\n      }\n      return filterItem;\n    })\n  );\n};\n\nexport const selectOneTag = (setState, tagName) => {\n  setState((stateFilters) =>\n    stateFilters.map((filterItem) => {\n      if (filterItem.filter === tagName) {\n        filterItem.isActive = true;\n      } else {\n        filterItem.isActive = false;\n      }\n      return filterItem;\n    })\n  );\n};\n\nexport const deselectOneTag = (setState, tagName) => {\n  setState((stateFilters) =>\n    stateFilters.map((filterItem) => {\n      if (filterItem.filter === tagName) {\n        filterItem.isActive = false;\n      }\n      return filterItem;\n    })\n  );\n};\n\nexport const deselectAllTags = (setState) => {\n  setState((stateFilters) =>\n    stateFilters.map((filterItem) => {\n      filterItem.isActive = false;\n      return filterItem;\n    })\n  );\n};\n","import { AFISHA_TITLE, MAIN_PAGE_TITLE } from '../../../config/routes';\n\nconst calendarPageTexts = {\n  headTitle: `${MAIN_PAGE_TITLE} | ${AFISHA_TITLE}`,\n  headDescription: 'Календарь событий и мероприятий для наставников.',\n  title: AFISHA_TITLE,\n  textStubNoData: 'Мы работаем над планом мероприятий на ближайшие месяцы.',\n};\n\nexport default calendarPageTexts;\n","import { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport calendarPageTexts from './locales/RU';\nimport {\n  CurrentUserContext,\n  ErrorsContext,\n  PopupsContext,\n} from '../../contexts';\nimport { useDebounce, useEventBooking } from '../../hooks';\nimport {\n  DELAY_DEBOUNCE,\n  ERROR_MESSAGES,\n  localStAfishaEvent,\n  months,\n} from '../../config/constants';\nimport { handleRadioBehavior } from '../../utils/filter-tags';\nimport { changeCaseOfFirstLetter } from '../../utils/utils';\nimport {\n  getActiveMonthTags,\n  getCalendarItem,\n  getCalendarPageData,\n} from '../../api/afisha-page';\nimport {\n  AnimatedPageContainer,\n  BasePage,\n  CardCalendar,\n  Loader,\n  Paginate,\n  TagsList,\n  TitleH1,\n} from './index';\nimport {\n  getLocalStorageData,\n  setLocalStorageData,\n} from '../../hooks/useLocalStorage';\nimport './Calendar.scss';\n\nconst { headTitle, headDescription, title, textStubNoData } = calendarPageTexts;\n\nconst INITIAL_PAGE_INDEX = 0;\nexport const PAGE_SIZE_PAGINATE = {\n  small: 6,\n  medium: 8,\n  big: 12,\n};\n\nconst maxScreenWidth = {\n  small: 1024,\n  medium: 1440,\n};\n\nfunction Calendar() {\n  const { currentUser } = useContext(CurrentUserContext);\n  const { openPopupLogin, openPopupAboutEvent, openPopupError } =\n    useContext(PopupsContext);\n  const { setError } = useContext(ErrorsContext);\n  const { state } = useLocation();\n\n  // переход между фильтрами/страницами пагинации, лоадер\n  const [isLoading, setIsLoading] = useState(false);\n  // переход между городами, лоадер\n  const [isGlobalLoader, setIsGlobalLoader] = useState(false);\n  // лоадер для пагинации\n  const [isLoadingPaginate, setIsLoadingPaginate] = useState(false);\n\n  // загрузка данных страницы календаря, если ты залогиненный\n  const [calendarPageData, setCalendarPageData] = useState(null);\n\n  // весь список доступных фильтров\n  // { isActive, name, filter }\n  const [filters, setFilters] = useState(null);\n\n  // флаг использования фильтров\n  const [isFiltersUsed, setIsFiltersUsed] = useState(false);\n\n  // Стейты для пагинации\n  const [pageSize, setPageSize] = useState(null);\n  const [totalPages, setTotalPages] = useState(null);\n  const [pageIndex, setPageIndex] = useState(INITIAL_PAGE_INDEX);\n  const [isFirstRender, setIsFirstRender] = useState(true);\n\n  // Стейт ошибки\n  const [isPageError, setIsPageError] = useState(false);\n\n  // определение размера страницы\n  useEffect(() => {\n    const small = window.matchMedia(`(max-width: ${maxScreenWidth.small}px)`);\n    const medium = window.matchMedia(`(max-width: ${maxScreenWidth.medium}px)`);\n\n    const listener = () => {\n      if (small.matches) {\n        // 320px-1024px по 6 элементов на странице\n        setPageSize(PAGE_SIZE_PAGINATE.small);\n      } else if (medium.matches) {\n        // 1024px-1440px по 8 элементов на странице\n        setPageSize(PAGE_SIZE_PAGINATE.medium);\n      } else {\n        // больше 1440px по 12 элементов на странице\n        setPageSize(PAGE_SIZE_PAGINATE.big);\n      }\n    };\n    listener();\n\n    small.addEventListener('change', listener);\n    medium.addEventListener('change', listener);\n\n    return () => {\n      small.removeEventListener('change', listener);\n      medium.removeEventListener('change', listener);\n    };\n  }, []);\n\n  // нужно ли рисовать фильтры (если месяц всего 1 - не рисуем)\n  const areThereEventsMoreForOneMonth = calendarPageData?.length > 0;\n\n  function getActiveFilters() {\n    if (!filters) {\n      // обязательно возвращаем пустой массив\n      return [];\n    }\n\n    return filters.filter((filter) => filter.isActive);\n  }\n\n  // общая функция загрузки ивентов\n  function getPageData({ offset, activeFilters }) {\n    getCalendarPageData({\n      limit: pageSize,\n      offset,\n      months: activeFilters,\n    })\n      .then((events) => {\n        const { results, count } = events;\n        setTotalPages(Math.ceil(count / pageSize));\n        setCalendarPageData(results);\n      })\n      .catch(() => {\n        if (isFiltersUsed) {\n          setError(ERROR_MESSAGES.filterErrorMessage);\n          openPopupError();\n        } else {\n          setIsPageError(true);\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n        setIsGlobalLoader(false);\n        setIsLoadingPaginate(false);\n      });\n  }\n\n  // Открытие попапа при переходе из поиска\n  useEffect(() => {\n    if (state) {\n      getCalendarItem(state.id)\n        .then((res) => {\n          setLocalStorageData(localStAfishaEvent, res);\n          openPopupAboutEvent();\n        })\n        .catch(() => setIsPageError(true));\n    }\n  }, [state]);\n\n  // загрузка страницы палендаря при старте либо показ попапа логина\n  useEffect(() => {\n    if (currentUser && pageSize) {\n      const offset = pageSize * pageIndex;\n      getPageData({ offset });\n      setIsFirstRender(false);\n    }\n\n    if (!currentUser) {\n      openPopupLogin();\n    }\n  }, [pageSize, currentUser]);\n\n  // загрузка фильтров страницы при старте или смене города юзера\n  useEffect(() => {\n    if (currentUser) {\n      setIsGlobalLoader(true);\n      getActiveMonthTags()\n        .then((monthsTags) => {\n          const customFilters = monthsTags.map((tag) => {\n            const filterName = changeCaseOfFirstLetter(months[tag - 1]); // бэк считает с 1, у нас массив с 0\n            return {\n              isActive: false,\n              name: filterName,\n              filter: tag,\n            };\n          });\n          setFilters(customFilters);\n        })\n        .catch(() => setIsPageError(true));\n    }\n  }, [currentUser?.city]);\n\n  // хэндлер фильтр-кнопки\n  function handleFilterButtonClick(inputValue, isChecked) {\n    handleRadioBehavior(setFilters, { inputValue, isChecked });\n    setIsFiltersUsed(true);\n  }\n\n  // вспомогательная функция фильтрации\n  function handleFiltration() {\n    const activeMonths = getActiveFilters();\n\n    const offset = isFiltersUsed ? 0 : pageSize * pageIndex;\n    // фильтров нет (грузим стартовую страницу)\n    if (activeMonths.length === 0) {\n      getPageData({ limit: pageSize, offset });\n    } else {\n      // фильтруемся по месяцу\n      const { filter } = activeMonths[0]; // задел под мультифильтры\n      getPageData({ limit: pageSize, offset, activeFilters: filter });\n    }\n  }\n\n  const debounceFiltration = useDebounce(handleFiltration, DELAY_DEBOUNCE);\n  // эффект фильтрации\n  useEffect(() => {\n    if (isFiltersUsed) {\n      setIsLoading(true);\n      debounceFiltration();\n    }\n\n    // провели фильтрацию, флажок фильтров меняем\n    setIsFiltersUsed(false);\n  }, [isFiltersUsed]);\n\n  // эффект пагинации\n  const debouncePaginate = useDebounce(getPageData, DELAY_DEBOUNCE);\n  useEffect(() => {\n    if (!isFirstRender) {\n      const activeMonths = getActiveFilters();\n      setIsLoadingPaginate(true);\n      // при нажатых фильтрах нажимаем пагинацию\n      if (activeMonths.length > 0) {\n        const offset = pageSize * pageIndex;\n        const { filter } = activeMonths[0]; // задел под мультифильтры\n        debouncePaginate({ offset, activeFilters: filter });\n      }\n\n      // просто нажимаем пагинацию + месяц не выбран\n      if (activeMonths.length === 0) {\n        const offset = pageSize * pageIndex;\n        debouncePaginate({ offset });\n      }\n    }\n  }, [pageIndex]);\n\n  // подписка/отписка от ивентов\n  const { handleEventBooking, selectedEvent, isWaitingResponse } =\n    useEventBooking();\n  useEffect(() => {\n    if (selectedEvent) {\n      setCalendarPageData(() =>\n        calendarPageData.map((event) =>\n          event.id === selectedEvent.id ? selectedEvent : event\n        )\n      );\n    }\n  }, [selectedEvent]);\n\n  // глобальный лоадер при первой загрузке пока ждем ивенты и фильтры\n  if ((!calendarPageData || !filters) && !isPageError) {\n    return <Loader isCentered />;\n  }\n\n  return (\n    <BasePage headTitle={headTitle} headDescription={headDescription}>\n      <section className=\"calendar-page page__section fade-in\">\n        {renderPageContent()}\n      </section>\n    </BasePage>\n  );\n\n  // рендеринг\n  // отрисовка заглушки, если ивентов нет\n  function returnAnimatedContainer() {\n    return (\n      <>\n        {isGlobalLoader ? (\n          <Loader isPaginate />\n        ) : (\n          <AnimatedPageContainer titleText={textStubNoData} />\n        )}\n      </>\n    );\n  }\n\n  // отрисовка карточек ивентов\n  function renderEventCardsContainer() {\n    return calendarPageData.map((cardData) => (\n      <CardCalendar\n        key={cardData.id}\n        cardData={cardData}\n        onEventSignUpClick={handleEventBooking}\n        onEventDescriptionClick={openPopupAboutEvent}\n        sectionClass=\"scale-in\"\n        isWaitingResponse={isWaitingResponse}\n        loadingEventId={\n          isWaitingResponse\n            ? getLocalStorageData(localStAfishaEvent)?.id\n            : undefined\n        }\n      />\n    ));\n  }\n\n  // фильтры\n  function renderFilters() {\n    return (\n      <TagsList\n        filterList={filters}\n        name=\"month\"\n        handleClick={handleFilterButtonClick}\n      />\n    );\n  }\n\n  // блок пагинации\n  function renderPagination() {\n    return (\n      <Paginate\n        sectionClass=\"cards-section__pagination\"\n        pageCount={totalPages}\n        value={pageIndex}\n        onChange={setPageIndex}\n      />\n    );\n  }\n\n  // главная функция рендера\n  function renderPageContent() {\n    // ошибка загрузки данных\n    if (isPageError) {\n      return (\n        <AnimatedPageContainer\n          titleText={ERROR_MESSAGES.generalErrorMessage.title}\n        />\n      );\n    }\n\n    // залогинен и есть ивенты\n    if (currentUser && areThereEventsMoreForOneMonth) {\n      return (\n        <>\n          {/* лоадер смены городов */}\n          {isGlobalLoader ? (\n            <Loader isPaginate />\n          ) : (\n            <>\n              <TitleH1 title={title} sectionClass=\"calendar-page__title\" />\n              <div className=\"calendar-page__container\">\n                {filters?.length > 1 && renderFilters()}\n\n                {/* лоадер смены фильтров */}\n                {isLoading ? (\n                  <Loader isPaginate />\n                ) : (\n                  <>\n                    {/* лоадер переключения пагинации */}\n                    {isLoadingPaginate ? (\n                      <Loader isPaginate />\n                    ) : (\n                      <div className=\"calendar-page__grid\">\n                        {renderEventCardsContainer()}\n                      </div>\n                    )}\n                    {totalPages > 1 && renderPagination()}\n                  </>\n                )}\n              </div>\n            </>\n          )}\n        </>\n      );\n    }\n\n    // залогинен и нет ивентов для города вообще\n    if (currentUser && !areThereEventsMoreForOneMonth && calendarPageData) {\n      return returnAnimatedContainer();\n    }\n\n    return null;\n  }\n}\n\nexport default Calendar;\n","import axios from 'axios';\nimport { apiUrl, baseURL } from '../config/config';\n\n// получить дату страницы\nfunction getCalendarPageData({ limit, offset, months }) {\n  return axios\n    .get(`${baseURL}${apiUrl}/afisha/events/`, {\n      params: { limit, offset, months },\n    })\n    .then((response) => response.data)\n    .catch((err) => Promise.reject(new Error(`${err.message}`)));\n}\n\n// получить тегсы-месяцы (список фильтров)\nfunction getActiveMonthTags() {\n  return axios\n    .get(`${baseURL}${apiUrl}/afisha/events/months/`)\n    .then((response) => response.data.months)\n    .catch((err) => Promise.reject(new Error(`${err.message}`)));\n}\n\n// получение одного события\nfunction getCalendarItem(id) {\n  return axios\n    .get(`${baseURL}${apiUrl}/afisha/events/${id}`)\n    .then((response) => response.data)\n    .catch((err) => Promise.reject(new Error(`${err.message}`)));\n}\n\nexport { getCalendarPageData, getActiveMonthTags, getCalendarItem };\n"],"sourceRoot":""}