{"version":3,"sources":["components/Cards/CardFigure/CardFigure.js","components/Cards/CardCatalog/CardCatalog.js","api/catalog-page.js","utils/render-lines.js","components/CardsSectionWithLines/CardsSectionWithLines.js","pages/Catalog/locales/RU.js","pages/Catalog/Catalog.js"],"names":["CardFigure","title","shape","color","children","sectionClass","className","defaultProps","CardCatalog","data","id","image","link","to","draggable","src","staticImageUrl","alt","getCatalogPageData","limit","offset","axios","get","baseURL","apiUrl","params","then","response","catch","err","Promise","reject","Error","message","getCatalogArticlePageData","articleId","renderThoseDamnedLines","dataLength","pageSize","isTablet","renderOneLine","renderTwoLines","renderThreeLines","CardsSectionWithLines","pageCount","pageNumber","setPageNumber","isLoading","useState","setIsTablet","useEffect","tablet","window","matchMedia","listener","matches","addEventListener","removeEventListener","isPaginate","value","onChange","catalogPageTexts","headTitle","MAIN_PAGE_TITLE","CATALOG_TITLE","headDescription","subtitle","textStubNoData","PAGE_SIZE_PAGINATE","maxScreenWidth","Catalog","setPageSize","setPageCount","catalogPageData","setCatalogPageData","isLoadingPage","setIsLoadingPage","isLoadingPaginate","setIsLoadingPaginate","isPageError","setIsPageError","results","count","Math","ceil","finally","getPageData","smallQuery","largeQuery","isCentered","BasePage","AnimatedPageContainer","titleText","ERROR_MESSAGES","generalErrorMessage","length","map","item","i","FIGURES","renderPageContent"],"mappings":"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","file":"static/js/7.606fe7bf.chunk.js","sourcesContent":["import './CardFigure.scss';\nimport PropTypes from 'prop-types';\n\nfunction CardFigure({ title, shape, color, children, sectionClass }) {\n  return (\n    <div\n      className={`card-figure card-figure_color_${color} card-figure_form_${shape} ${sectionClass}`}\n    >\n      {title && <h2 className=\"section-title\">{title}</h2>}\n      {children}\n    </div>\n  );\n}\n\nCardFigure.propTypes = {\n  title: PropTypes.string,\n  shape: PropTypes.string.isRequired,\n  color: PropTypes.string,\n  children: PropTypes.node,\n  sectionClass: PropTypes.string,\n};\n\nCardFigure.defaultProps = {\n  title: '',\n  color: 'yellow',\n  children: null,\n  sectionClass: '',\n};\n\nexport default CardFigure;\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { TitleH2 } from '../../utils';\nimport CardFigure from '../CardFigure/CardFigure';\nimport { staticImageUrl } from '../../../config/config';\nimport './CardCatalog.scss';\n\nfunction CardCatalog({ data: { id, title, image }, shape, sectionClass }) {\n  const link = `/catalog/${id}`;\n  return (\n    <div className={`card-catalog ${sectionClass}`}>\n      <Link to={link} className=\"card-catalog__link-wrap\">\n        <div className=\"card-catalog__image-wrap\">\n          <CardFigure\n            sectionClass=\"card-catalog_type_shaped\"\n            shape={shape}\n            color=\"white\"\n          >\n            <img\n              draggable=\"false\"\n              className=\"card-catalog__image\"\n              src={`${staticImageUrl}/${image}`}\n              alt={title}\n            />\n          </CardFigure>\n        </div>\n        <TitleH2 sectionClass=\"card-catalog__title\" title={title} />\n      </Link>\n    </div>\n  );\n}\n\nCardCatalog.propTypes = {\n  data: PropTypes.objectOf(PropTypes.any),\n  title: PropTypes.string,\n  shape: PropTypes.string.isRequired,\n  image: PropTypes.string,\n  sectionClass: PropTypes.string,\n};\n\nCardCatalog.defaultProps = {\n  data: {},\n  title: '',\n  image: '',\n  sectionClass: '',\n};\n\nexport default CardCatalog;\n","import axios from 'axios';\nimport { apiUrl, baseURL } from '../config/config';\n\n// получить данные страницы каталога\nfunction getCatalogPageData({ limit, offset }) {\n  return axios\n    .get(`${baseURL}${apiUrl}/catalog/`, {\n      params: { limit, offset },\n    })\n    .then((response) => response.data)\n    .catch((err) => Promise.reject(new Error(`${err.message}`)));\n}\n\nfunction getCatalogArticlePageData({ articleId } = {}) {\n  return axios\n    .get(`${baseURL}${apiUrl}/catalog/${articleId}`)\n    .then((response) => response.data)\n    .catch((err) => Promise.reject(err?.response));\n}\n\nexport { getCatalogPageData, getCatalogArticlePageData };\n","//! хардкод\n// eslint-disable-next-line consistent-return\nfunction renderThoseDamnedLines(dataLength, pageSize, isTablet) {\n  const renderOneLine = () => (\n    <>\n      <div className=\"cards-section__line\" />\n    </>\n  );\n\n  const renderTwoLines = () => (\n    <>\n      <div className=\"cards-section__line\" />\n      <div className=\"cards-section__line\" />\n    </>\n  );\n\n  const renderThreeLines = () => (\n    <>\n      <div className=\"cards-section__line\" />\n      <div className=\"cards-section__line\" />\n      <div className=\"cards-section__line\" />\n    </>\n  );\n\n  if (isTablet) {\n    if (dataLength < 2) return null;\n\n    if (dataLength < 3) return renderOneLine();\n\n    if (dataLength < 4) return renderTwoLines();\n\n    return renderThreeLines();\n  }\n\n  switch (pageSize) {\n    case 16: {\n      if (dataLength < 5) return null;\n\n      if (dataLength < 9) return renderOneLine();\n\n      if (dataLength < 13) return renderTwoLines();\n\n      return renderThreeLines();\n    }\n\n    case 12: {\n      if (dataLength < 4) return null;\n\n      if (dataLength < 7) return renderOneLine();\n\n      if (dataLength < 10) return renderTwoLines();\n\n      return renderThreeLines();\n    }\n\n    case 9: {\n      if (dataLength < 4) return null;\n\n      if (dataLength < 7) return renderOneLine();\n\n      return renderTwoLines();\n    }\n\n    default: {\n      if (dataLength < 3) return null;\n\n      return renderOneLine();\n    }\n  }\n}\n\nexport default renderThoseDamnedLines;\n","import PropTypes from 'prop-types';\nimport { useEffect, useState } from 'react';\nimport { Loader, Paginate } from '../utils';\nimport renderThoseDamnedLines from '../../utils/render-lines';\nimport './CardsSectionWithLines.scss';\n\nconst maxTabletWidth = 900;\n\nfunction CardsSectionWithLines({\n  pageCount,\n  children,\n  pageNumber,\n  setPageNumber,\n  sectionClass,\n  isLoading,\n  dataLength,\n  pageSize,\n}) {\n  const [isTablet, setIsTablet] = useState(false);\n\n  useEffect(() => {\n    const tablet = window.matchMedia(`(max-width: ${maxTabletWidth}px)`);\n\n    const listener = () => {\n      if (tablet.matches) setIsTablet(true);\n      else setIsTablet(false);\n    };\n    listener();\n\n    tablet.addEventListener('change', listener);\n\n    return () => {\n      tablet.removeEventListener('change', listener);\n    };\n  }, []);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader isPaginate />\n      ) : (\n        <>\n          <section className={`cards-section ${sectionClass}`}>\n            {renderThoseDamnedLines(dataLength, pageSize, isTablet)}\n            {children}\n          </section>\n        </>\n      )}\n\n      {pageCount > 1 && (\n        <Paginate\n          sectionClass=\"cards-section__pagination cards-section__pagination_no-padding\"\n          pageCount={pageCount}\n          value={pageNumber}\n          onChange={setPageNumber}\n        />\n      )}\n    </>\n  );\n}\n\nCardsSectionWithLines.propTypes = {\n  pageCount: PropTypes.number,\n  children: PropTypes.node,\n  pageNumber: PropTypes.number,\n  setPageNumber: PropTypes.func,\n  sectionClass: PropTypes.string,\n  isLoading: PropTypes.bool,\n  dataLength: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n};\n\nCardsSectionWithLines.defaultProps = {\n  pageCount: 0,\n  children: null,\n  pageNumber: 0,\n  setPageNumber: () => {},\n  sectionClass: '',\n  isLoading: false,\n};\n\nexport default CardsSectionWithLines;\n","import { CATALOG_TITLE, MAIN_PAGE_TITLE } from '../../../config/routes';\n\nconst catalogPageTexts = {\n  headTitle: `${MAIN_PAGE_TITLE} | ${CATALOG_TITLE}`,\n  headDescription: 'Справочник полезных статей.',\n  title: CATALOG_TITLE,\n  subtitle: `Памятка новичка${'\\u00A0'}– наши материалы, где сможете найти всю базовую информацию, рассказанную на вводном тренинге. Если вы захотите освежить свои знания и${'\\u00A0'}напомнить себе о${'\\u00A0'}чем-то.`,\n  textStubNoData: 'Информация появится в ближайшее время.',\n};\n\nexport default catalogPageTexts;\n","import { useEffect, useState } from 'react';\nimport catalogPageTexts from './locales/RU';\nimport {\n  AnimatedPageContainer,\n  BasePage,\n  CardCatalog,\n  CardsSectionWithLines,\n  Loader,\n  TitleH1,\n  TitleH2,\n} from './index';\nimport { getCatalogPageData } from '../../api/catalog-page';\nimport { ERROR_MESSAGES, FIGURES } from '../../config/constants';\nimport './Catalog.scss';\n\nconst PAGE_SIZE_PAGINATE = {\n  small: 4,\n  medium: 9,\n  big: 16,\n};\n\nconst maxScreenWidth = {\n  small: 1399,\n  medium: 1640,\n};\n\nconst { headTitle, headDescription, title, subtitle, textStubNoData } =\n  catalogPageTexts;\n\nfunction Catalog() {\n  const [pageSize, setPageSize] = useState(null);\n  const [pageCount, setPageCount] = useState(0);\n  const [pageNumber, setPageNumber] = useState(0);\n\n  const [catalogPageData, setCatalogPageData] = useState([]);\n  const [isLoadingPage, setIsLoadingPage] = useState(true);\n  const [isLoadingPaginate, setIsLoadingPaginate] = useState(false);\n  // Стейт ошибки\n  const [isPageError, setIsPageError] = useState(false);\n\n  function getPageData() {\n    const offset = pageSize * pageNumber;\n\n    getCatalogPageData({ limit: pageSize, offset })\n      .then(({ results, count }) => {\n        setCatalogPageData(results);\n        setPageCount(Math.ceil(count / pageSize));\n      })\n      .catch(() => setIsPageError(true))\n      .finally(() => {\n        setIsLoadingPaginate(false);\n        setIsLoadingPage(false);\n      });\n  }\n\n  useEffect(() => {\n    if (pageSize) {\n      getPageData();\n    }\n\n    if (!isLoadingPage) {\n      setIsLoadingPaginate(true);\n    }\n  }, [pageSize, pageNumber]);\n\n  useEffect(() => {\n    const smallQuery = window.matchMedia(\n      `(max-width: ${maxScreenWidth.small}px)`\n    );\n    const largeQuery = window.matchMedia(\n      `(max-width: ${maxScreenWidth.medium}px)`\n    );\n\n    const listener = () => {\n      if (smallQuery.matches) {\n        setPageSize(PAGE_SIZE_PAGINATE.small);\n      } else if (largeQuery.matches) {\n        setPageSize(PAGE_SIZE_PAGINATE.medium);\n      } else {\n        setPageSize(PAGE_SIZE_PAGINATE.big);\n      }\n    };\n    listener();\n\n    smallQuery.addEventListener('change', listener);\n    largeQuery.addEventListener('change', listener);\n\n    return () => {\n      smallQuery.removeEventListener('change', listener);\n      largeQuery.removeEventListener('change', listener);\n    };\n  }, []);\n\n  if (isLoadingPage) {\n    return <Loader isCentered />;\n  }\n\n  return (\n    <BasePage headTitle={headTitle} headDescription={headDescription}>\n      {renderPageContent()}\n    </BasePage>\n  );\n\n  function renderCards() {\n    return (\n      <CardsSectionWithLines\n        pageCount={pageCount}\n        pageNumber={pageNumber}\n        setPageNumber={setPageNumber}\n        isLoading={isLoadingPaginate}\n        dataLength={catalogPageData.length}\n        pageSize={pageSize}\n      >\n        {catalogPageData.map((item, i) => (\n          <CardCatalog\n            sectionClass=\"cards-section__item scale-in\"\n            key={item?.id}\n            data={item}\n            shape={FIGURES[i % FIGURES.length]}\n          />\n        ))}\n      </CardsSectionWithLines>\n    );\n  }\n\n  function renderPageContent() {\n    if (isPageError) {\n      return (\n        <AnimatedPageContainer\n          titleText={ERROR_MESSAGES.generalErrorMessage.title}\n        />\n      );\n    }\n    if (!catalogPageData && !isLoadingPage && !isPageError) {\n      return <AnimatedPageContainer titleText={textStubNoData} />;\n    }\n\n    return (\n      <section className=\"catalog page__section fade-in\">\n        <TitleH1 sectionClass=\"catalog__title\" title={title} />\n        <TitleH2 sectionClass=\"catalog__subtitle\" title={subtitle} />\n        {renderCards()}\n      </section>\n    );\n  }\n}\n\nexport default Catalog;\n"],"sourceRoot":""}