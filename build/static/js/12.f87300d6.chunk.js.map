{"version":3,"sources":["components/TagsList/TagsList.js","utils/filter-tags.js","api/movies-page.js","pages/Movies/locales/RU.js","pages/Movies/Movies.js"],"names":["TagsList","filterList","name","handleClick","classNames","sectionClass","join","trim","classNamesList","length","className","map","item","value","filter","title","isActive","onClick","defaultProps","handleCheckboxBehavior","setState","inputValue","isChecked","stateFilters","filterItem","handleRadioBehavior","selectOneTag","tagName","deselectOneTag","deselectAllTags","getMoviesPageData","limit","offset","tags","axios","get","baseURL","apiUrl","params","then","response","data","catch","err","Promise","reject","Error","message","getMoviesPageFilter","getMovie","id","moviesPageTexts","headTitle","MAIN_PAGE_TITLE","MOVIES_TITLE","headDescription","textStubNoData","PAGE_SIZE_PAGINATE","maxScreenWidth","Movies","state","useLocation","setError","useContext","ErrorsContext","PopupsContext","openPopupError","openPopupVideo","useState","isLoading","setIsLoading","isLoadingPaginate","setIsLoadingPaginate","moviesPageData","setMoviesPageData","categories","setCategories","isFiltersUsed","setIsFiltersUsed","pageSize","setPageSize","pageCount","setPageCount","pageNumber","setPageNumber","isPageError","setIsPageError","getActiveTags","ALL_CATEGORIES","getMoviesData","activeCategories","activeTags","results","count","Math","ceil","ERROR_MESSAGES","filterErrorMessage","finally","changeCategory","useEffect","res","setLocalStorageData","localStChosenVideo","debounceFiltration","useDebounce","DELAY_DEBOUNCE","debouncePaginate","categoriesArr","tag","slug","toLowerCase","changeCaseOfFirstLetter","smallQuery","window","matchMedia","largeQuery","listener","matches","addEventListener","removeEventListener","isCentered","BasePage","AnimatedPageContainer","titleText","generalErrorMessage","isPaginate","renderMoviesContainer","renderPageContent","movie","CardFilm","CardAnnotation","description","annotation","Paginate","onChange"],"mappings":"uHACA,2BAKA,SAASA,EAAT,GAAoE,IAAhDC,EAA+C,EAA/CA,WAAYC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,YAC9BC,EAAa,CAAC,OAD6C,EAAhBC,cACPC,KAAK,KAAKC,OAC9CC,EAAiB,CACrB,aACAP,EAAWQ,OANmB,EAMkB,oBAAsB,IAErEH,KAAK,KACLC,OAEH,OACE,qBAAKG,UAAWN,EAAhB,SACE,oBAAIM,UAAWF,EAAf,SACGP,EAAWU,KAAI,SAACC,GAAD,OACd,oBAAIF,UAAU,kBAAd,SACE,cAAC,IAAD,CACER,KAAMA,EACNW,MAAK,OAAED,QAAF,IAAEA,OAAF,EAAEA,EAAME,OACbC,MAAK,OAAEH,QAAF,IAAEA,OAAF,EAAEA,EAAMV,KACbc,SAAQ,OAAEJ,QAAF,IAAEA,OAAF,EAAEA,EAAMI,SAChBC,QAASd,KANb,OAAqCS,QAArC,IAAqCA,OAArC,EAAqCA,EAAMV,aAsBrDF,EAASkB,aAAe,CACtBjB,WAAY,GACZI,aAAc,GACdH,KAAM,GACNC,YAAa,cAGAH,O,iCChDf,0KACO,IAAMmB,EAAyB,SAACC,EAAD,GAA0C,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAC7DF,GAAS,SAACG,GAAD,OACPA,EAAaZ,KAAI,SAACa,GAIhB,OAHIA,EAAWV,SAAWO,IACxBG,EAAWR,SAAWM,GAEjBE,SAKAC,EAAsB,SAACL,EAAD,GAA0C,IAA7BC,EAA4B,EAA5BA,WAAYC,EAAgB,EAAhBA,UAC1DF,GAAS,SAACG,GAAD,OACPA,EAAaZ,KAAI,SAACa,GAMhB,OALIA,EAAWV,SAAWO,EACxBG,EAAWR,SAAWM,EAEtBE,EAAWR,UAAW,EAEjBQ,SAKAE,EAAe,SAACN,EAAUO,GACrCP,GAAS,SAACG,GAAD,OACPA,EAAaZ,KAAI,SAACa,GAMhB,OALIA,EAAWV,SAAWa,EACxBH,EAAWR,UAAW,EAEtBQ,EAAWR,UAAW,EAEjBQ,SAKAI,EAAiB,SAACR,EAAUO,GACvCP,GAAS,SAACG,GAAD,OACPA,EAAaZ,KAAI,SAACa,GAIhB,OAHIA,EAAWV,SAAWa,IACxBH,EAAWR,UAAW,GAEjBQ,SAKAK,EAAkB,SAACT,GAC9BA,GAAS,SAACG,GAAD,OACPA,EAAaZ,KAAI,SAACa,GAEhB,OADAA,EAAWR,UAAW,EACfQ,U,uDCrDb,kIAIA,SAASM,EAAT,GAAqD,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,OAAQC,EAAQ,EAARA,KAC1C,OAAOC,IACJC,IADI,UACGC,KADH,OACaC,IADb,YAC+B,CAClCC,OAAQ,CAAEL,OAAMF,QAAOC,YAExBO,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,OAAM,SAACC,GAAD,OAASC,QAAQC,OAAO,IAAIC,MAAJ,UAAaH,EAAII,cAIpD,SAASC,IACP,OAAOd,IACJC,IADI,UACGC,KADH,OACaC,IADb,kBAEJE,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,OAAM,SAACC,GAAD,OAASC,QAAQC,OAAO,IAAIC,MAAJ,UAAaH,EAAII,cAIpD,SAASE,EAASC,GAChB,OAAOhB,IACJC,IADI,UACGC,KADH,OACaC,IADb,mBAC8Ba,IAClCX,MAAK,SAACC,GAAD,OAAcA,EAASC,QAC5BC,OAAM,SAACC,GAAD,OAASC,QAAQC,OAAO,IAAIC,MAAJ,UAAaH,EAAII,gB,uGCfrCI,EATS,CACtBC,UAAU,GAAD,OAAKC,IAAL,cAA0BC,KACnCC,gBACE,sUACFxC,MAAOuC,IACPE,eACE,uU,+HC2BEC,EACG,EADHA,EAEI,GAFJA,EAGC,GAGDC,EACG,KADHA,EAEI,KAGFN,EAAsDD,EAAtDC,UAAWG,EAA2CJ,EAA3CI,gBAAiBxC,EAA0BoC,EAA1BpC,MAAOyC,EAAmBL,EAAnBK,eAkP5BG,UAhPf,WACE,IAAQC,EAAUC,cAAVD,MACAE,EAAaC,qBAAWC,KAAxBF,SACR,EAA2CC,qBAAWE,KAA9CC,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,eAGxB,EAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkDF,oBAAS,GAA3D,mBAAOG,EAAP,KAA0BC,EAA1B,KAEA,EAA4CJ,mBAAS,MAArD,mBAAOK,EAAP,KAAuBC,EAAvB,KACA,EAAoCN,mBAAS,MAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAEA,EAA0CR,oBAAS,GAAnD,mBAAOS,EAAP,KAAsBC,EAAtB,KAEA,EAAgCV,mBAAS,MAAzC,oBAAOW,GAAP,MAAiBC,GAAjB,MACA,GAAkCZ,mBAAS,GAA3C,qBAAOa,GAAP,MAAkBC,GAAlB,MACA,GAAoCd,mBAAS,GAA7C,qBAAOe,GAAP,MAAmBC,GAAnB,MAEA,GAAsChB,oBAAS,GAA/C,qBAAOiB,GAAP,MAAoBC,GAApB,MAEMC,GAAgB,WACpB,OAAIZ,EACKA,EACJ7D,QAAO,SAACA,GAAD,OAAYA,EAAOE,UAAYF,EAAOA,SAAW0E,OACxD7E,KAAI,SAACG,GAAD,OAAYA,EAAOA,UACvBR,KAAK,KAEH,MAGHmF,GAAgB,SAACC,GACrB,IAAM1D,EAAS6C,EAAgB,EAAIE,GAAWI,GACxCQ,EAAaD,GAAoBH,KAEvCzD,YAAkB,CAChBC,MAAOgD,GACP/C,SACAC,KAAM0D,IAELpD,MAAK,YAAyB,IAAtBqD,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAEhB,OADAX,GAAaY,KAAKC,KAAKF,EAAQd,KACxBa,KAERrD,MAAK,SAACqD,GAAD,OAAalB,EAAkBkB,MACpClD,OAAM,WACDmC,GACFf,EAASkC,IAAeC,oBACxB/B,KAEAoB,IAAe,MAGlBY,SAAQ,WACP5B,GAAa,GACbE,GAAqB,GACrBM,GAAiB,OAsBjBqB,GAAiB,SAAC9E,EAAYC,GAC9BD,IAAemE,IACjB9D,YAAakD,EAAeY,MAE5BrE,YAAuByD,EAAe,CAAEvD,aAAYC,cACpDM,YAAegD,EAAeY,MAEhCV,GAAiB,IAgBnBsB,qBAAU,WACJxC,GACFX,YAASW,EAAMV,IACZX,MAAK,SAAC8D,GACLC,YAAoBC,IAAoBF,GACxClC,OAEDzB,OAAM,kBAAM4C,IAAe,QAE/B,CAAC1B,IAGJ,IAAM4C,GAAqBC,aAxBF,WACvB,GAAI9B,GAAcE,EAAe,CAC/B,IAAMa,EAAmBH,KAEO,IAA5BG,EAAiBjF,QACnBiB,YAAakD,EAAeY,KAE9BC,GAAcC,MAiBuCgB,KACnDC,GAAmBF,YAAYhB,GAAeiB,KAiDpD,OAhDAN,qBAAU,WACJvB,GACF2B,OAED,CAAC3B,IAGJuB,qBAAU,WACJ/B,GAAaU,KACfU,KA/DFzC,cACGT,MAAK,SAACN,GACL,IAAM2E,EAAgB3E,EAAKtB,KAAI,SAACkG,GAAD,MAAU,CACvC/F,OAAM,OAAE+F,QAAF,IAAEA,OAAF,EAAEA,EAAKC,KAAKC,cAClB7G,KAAM8G,YAAuB,OAACH,QAAD,IAACA,OAAD,EAACA,EAAK3G,MACnCc,UAAU,MAGZ4D,EAAc,CACZ,CAAE9D,OAAQ0E,IAAgBtF,KAAMsF,IAAgBxE,UAAU,IAD/C,mBAER4F,QAGNlE,OAAM,kBAAM4C,IAAe,OAsDzBjB,GAAcQ,IACjBL,GAAqB,GACrBmC,QAED,CAAC5B,GAAUI,KAEdiB,qBAAU,WACR,IAAMa,EAAaC,OAAOC,WAAP,sBACFzD,EADE,QAGb0D,EAAaF,OAAOC,WAAP,sBACFzD,EADE,QAIb2D,EAAW,WACXJ,EAAWK,QACbtC,GAAYvB,GACH2D,EAAWE,QACpBtC,GAAYvB,GAEZuB,GAAYvB,IAQhB,OALA4D,IAEAJ,EAAWM,iBAAiB,SAAUF,GACtCD,EAAWG,iBAAiB,SAAUF,GAE/B,WACLJ,EAAWO,oBAAoB,SAAUH,GACzCD,EAAWI,oBAAoB,SAAUH,MAE1C,IAGChD,EACK,cAAC,IAAD,CAAQoD,YAAU,IAIzB,cAACC,EAAA,EAAD,CAAUtE,UAAWA,EAAWG,gBAAiBA,EAAjD,SACE,yBAAS7C,UAAU,+BAAnB,SA4CJ,WACE,GAAI2E,GACF,OACE,cAACsC,EAAA,EAAD,CACEC,UAAW5B,IAAe6B,oBAAoB9G,QAIpD,OACE,qCACE,cAAC,IAAD,CAASA,MAAOA,EAAOV,aAAa,mBAGzB,OAAVsE,QAAU,IAAVA,OAAA,EAAAA,EAAYlE,QAAS,GACpB,cAACT,EAAA,EAAD,CACEC,WAAY0E,EACZzE,KAAK,MACLC,YAAagG,KAKhBtB,EAAgB,cAAC,IAAD,CAAQiD,YAAU,IAAMC,QAjExCC,OAWP,SAASD,KACP,OAAKtD,GAAmBJ,EAItB,qCACGE,EACC,cAAC,IAAD,CAAQuD,YAAU,IAElB,oBAAIpH,UAAU,kEAAd,SACG+D,EAAe9D,KAAI,SAACsH,GAAD,OAClB,qBAAIvH,UAAU,0BAAd,UACE,cAACwH,EAAA,EAAD,CAAUzF,KAAMwF,IAChB,cAACE,EAAA,EAAD,CAAgBC,YAAaH,EAAMI,eAFQJ,EAAM/E,SAQxD+B,GAAY,GACX,cAACqD,EAAA,EAAD,CACEjI,aAAa,4BACb4E,UAAWA,GACXpE,MAAOsE,GACPoD,SAAUnD,QA5BX,cAACuC,EAAA,EAAD,CAAuBC,UAAWpE","file":"static/js/12.f87300d6.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PseudoButtonTag } from '../utils';\nimport './TagsList.scss';\n\nconst centeringFiltersMaxLength = 3;\n\nfunction TagsList({ filterList, name, handleClick, sectionClass }) {\n  const classNames = ['tags', sectionClass].join(' ').trim();\n  const classNamesList = [\n    'tags__list',\n    filterList.length > centeringFiltersMaxLength ? 'tags__list_mobile' : '',\n  ]\n    .join(' ')\n    .trim();\n\n  return (\n    <div className={classNames}>\n      <ul className={classNamesList}>\n        {filterList.map((item) => (\n          <li className=\"tags__list-item\" key={item?.name}>\n            <PseudoButtonTag\n              name={name}\n              value={item?.filter}\n              title={item?.name}\n              isActive={item?.isActive}\n              onClick={handleClick}\n            />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nTagsList.propTypes = {\n  filterList: PropTypes.arrayOf(PropTypes.any),\n  sectionClass: PropTypes.string,\n  name: PropTypes.string,\n  handleClick: PropTypes.func,\n};\n\nTagsList.defaultProps = {\n  filterList: [],\n  sectionClass: '',\n  name: '',\n  handleClick: () => {},\n};\n\nexport default TagsList;\n","/* eslint-disable no-param-reassign */\nexport const handleCheckboxBehavior = (setState, { inputValue, isChecked }) => {\n  setState((stateFilters) =>\n    stateFilters.map((filterItem) => {\n      if (filterItem.filter === inputValue) {\n        filterItem.isActive = isChecked;\n      }\n      return filterItem;\n    })\n  );\n};\n\nexport const handleRadioBehavior = (setState, { inputValue, isChecked }) => {\n  setState((stateFilters) =>\n    stateFilters.map((filterItem) => {\n      if (filterItem.filter === inputValue) {\n        filterItem.isActive = isChecked;\n      } else {\n        filterItem.isActive = false;\n      }\n      return filterItem;\n    })\n  );\n};\n\nexport const selectOneTag = (setState, tagName) => {\n  setState((stateFilters) =>\n    stateFilters.map((filterItem) => {\n      if (filterItem.filter === tagName) {\n        filterItem.isActive = true;\n      } else {\n        filterItem.isActive = false;\n      }\n      return filterItem;\n    })\n  );\n};\n\nexport const deselectOneTag = (setState, tagName) => {\n  setState((stateFilters) =>\n    stateFilters.map((filterItem) => {\n      if (filterItem.filter === tagName) {\n        filterItem.isActive = false;\n      }\n      return filterItem;\n    })\n  );\n};\n\nexport const deselectAllTags = (setState) => {\n  setState((stateFilters) =>\n    stateFilters.map((filterItem) => {\n      filterItem.isActive = false;\n      return filterItem;\n    })\n  );\n};\n","import axios from 'axios';\nimport { apiUrl, baseURL } from '../config/config';\n\n// работа со страницей фильмы\nfunction getMoviesPageData({ limit, offset, tags }) {\n  return axios\n    .get(`${baseURL}${apiUrl}/movies/`, {\n      params: { tags, limit, offset },\n    })\n    .then((response) => response.data)\n    .catch((err) => Promise.reject(new Error(`${err.message}`)));\n}\n\n// все активные теги (фильтры)\nfunction getMoviesPageFilter() {\n  return axios\n    .get(`${baseURL}${apiUrl}/movies/tags/`)\n    .then((response) => response.data)\n    .catch((err) => Promise.reject(new Error(`${err.message}`)));\n}\n\n// получение одного видео\nfunction getMovie(id) {\n  return axios\n    .get(`${baseURL}${apiUrl}/movies/${id}`)\n    .then((response) => response.data)\n    .catch((err) => Promise.reject(new Error(`${err.message}`)));\n}\n\nexport { getMoviesPageData, getMoviesPageFilter, getMovie };\n","import { MAIN_PAGE_TITLE, MOVIES_TITLE } from '../../../config/routes';\n\nconst moviesPageTexts = {\n  headTitle: `${MAIN_PAGE_TITLE} | ${MOVIES_TITLE}`,\n  headDescription:\n    'Подборка фильмов, которые можно посмотреть, с аннотацией к ним.',\n  title: MOVIES_TITLE,\n  textStubNoData:\n    'В данный момент страница c фильмами пуста. Возвращайтесь позже!',\n};\n\nexport default moviesPageTexts;\n","import { useContext, useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport moviesPageTexts from './locales/RU';\nimport { ErrorsContext, PopupsContext } from '../../contexts';\nimport { useDebounce } from '../../hooks';\nimport {\n  getMovie,\n  getMoviesPageData,\n  getMoviesPageFilter,\n} from '../../api/movies-page';\nimport {\n  AnimatedPageContainer,\n  BasePage,\n  CardAnnotation,\n  CardFilm,\n  Loader,\n  TagsList,\n  TitleH1,\n} from './index';\nimport Paginate from '../../components/utils/Paginate/Paginate';\nimport { changeCaseOfFirstLetter } from '../../utils/utils';\nimport {\n  ALL_CATEGORIES,\n  DELAY_DEBOUNCE,\n  ERROR_MESSAGES,\n  localStChosenVideo,\n} from '../../config/constants';\nimport {\n  deselectOneTag,\n  handleCheckboxBehavior,\n  selectOneTag,\n} from '../../utils/filter-tags';\nimport { setLocalStorageData } from '../../hooks/useLocalStorage';\nimport './Movies.scss';\n\nconst PAGE_SIZE_PAGINATE = {\n  small: 8,\n  medium: 12,\n  big: 16,\n};\n\nconst maxScreenWidth = {\n  small: 1216,\n  medium: 1451,\n};\n\nconst { headTitle, headDescription, title, textStubNoData } = moviesPageTexts;\n\nfunction Movies() {\n  const { state } = useLocation();\n  const { setError } = useContext(ErrorsContext);\n  const { openPopupError, openPopupVideo } = useContext(PopupsContext);\n\n  // Загрузка данных\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoadingPaginate, setIsLoadingPaginate] = useState(false);\n  // Стейты с данными Фильмов, Теги\n  const [moviesPageData, setMoviesPageData] = useState(null);\n  const [categories, setCategories] = useState(null);\n  // флаг применения фильтров\n  const [isFiltersUsed, setIsFiltersUsed] = useState(false);\n  // Стейты для пагинации\n  const [pageSize, setPageSize] = useState(null);\n  const [pageCount, setPageCount] = useState(0);\n  const [pageNumber, setPageNumber] = useState(0);\n  // Стейт ошибки\n  const [isPageError, setIsPageError] = useState(false);\n\n  const getActiveTags = () => {\n    if (categories) {\n      return categories\n        .filter((filter) => filter.isActive && filter.filter !== ALL_CATEGORIES)\n        .map((filter) => filter.filter)\n        .join(',');\n    }\n    return null;\n  };\n\n  const getMoviesData = (activeCategories) => {\n    const offset = isFiltersUsed ? 0 : pageSize * pageNumber;\n    const activeTags = activeCategories || getActiveTags();\n\n    getMoviesPageData({\n      limit: pageSize,\n      offset,\n      tags: activeTags,\n    })\n      .then(({ results, count }) => {\n        setPageCount(Math.ceil(count / pageSize));\n        return results;\n      })\n      .then((results) => setMoviesPageData(results))\n      .catch(() => {\n        if (isFiltersUsed) {\n          setError(ERROR_MESSAGES.filterErrorMessage);\n          openPopupError();\n        } else {\n          setIsPageError(true);\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n        setIsLoadingPaginate(false);\n        setIsFiltersUsed(false);\n      });\n  };\n\n  const getMoviesFilter = () => {\n    getMoviesPageFilter()\n      .then((tags) => {\n        const categoriesArr = tags.map((tag) => ({\n          filter: tag?.slug.toLowerCase(),\n          name: changeCaseOfFirstLetter(tag?.name),\n          isActive: false,\n        }));\n\n        setCategories([\n          { filter: ALL_CATEGORIES, name: ALL_CATEGORIES, isActive: true },\n          ...categoriesArr,\n        ]);\n      })\n      .catch(() => setIsPageError(true));\n  };\n\n  // хэндлер клика по фильтру КАТЕГОРИЯ\n  const changeCategory = (inputValue, isChecked) => {\n    if (inputValue === ALL_CATEGORIES) {\n      selectOneTag(setCategories, ALL_CATEGORIES);\n    } else {\n      handleCheckboxBehavior(setCategories, { inputValue, isChecked });\n      deselectOneTag(setCategories, ALL_CATEGORIES);\n    }\n    setIsFiltersUsed(true);\n  };\n\n  // функция-фильтратор с использованием АПИ\n  const handleFiltration = () => {\n    if (categories && isFiltersUsed) {\n      const activeCategories = getActiveTags();\n\n      if (activeCategories.length === 0) {\n        selectOneTag(setCategories, ALL_CATEGORIES);\n      }\n      getMoviesData(activeCategories);\n    }\n  };\n\n  // Откртие попапа при переходе из поиска\n  useEffect(() => {\n    if (state) {\n      getMovie(state.id)\n        .then((res) => {\n          setLocalStorageData(localStChosenVideo, res);\n          openPopupVideo();\n        })\n        .catch(() => setIsPageError(true));\n    }\n  }, [state]);\n\n  /// Фильтрация с делэем\n  const debounceFiltration = useDebounce(handleFiltration, DELAY_DEBOUNCE);\n  const debouncePaginate = useDebounce(getMoviesData, DELAY_DEBOUNCE);\n  useEffect(() => {\n    if (isFiltersUsed) {\n      debounceFiltration();\n    }\n  }, [isFiltersUsed]);\n\n  // Первая отрисовка страницы + переход по страницам пагинации\n  useEffect(() => {\n    if (isLoading && pageSize) {\n      getMoviesData();\n      getMoviesFilter();\n    }\n\n    if (!isLoading && !isFiltersUsed) {\n      setIsLoadingPaginate(true);\n      debouncePaginate();\n    }\n  }, [pageSize, pageNumber]);\n\n  useEffect(() => {\n    const smallQuery = window.matchMedia(\n      `(max-width: ${maxScreenWidth.small}px)`\n    );\n    const largeQuery = window.matchMedia(\n      `(max-width: ${maxScreenWidth.medium}px)`\n    );\n\n    const listener = () => {\n      if (smallQuery.matches) {\n        setPageSize(PAGE_SIZE_PAGINATE.small);\n      } else if (largeQuery.matches) {\n        setPageSize(PAGE_SIZE_PAGINATE.medium);\n      } else {\n        setPageSize(PAGE_SIZE_PAGINATE.big);\n      }\n    };\n    listener();\n\n    smallQuery.addEventListener('change', listener);\n    largeQuery.addEventListener('change', listener);\n\n    return () => {\n      smallQuery.removeEventListener('change', listener);\n      largeQuery.removeEventListener('change', listener);\n    };\n  }, []);\n\n  // глобальный лоадер\n  if (isLoading) {\n    return <Loader isCentered />;\n  }\n\n  return (\n    <BasePage headTitle={headTitle} headDescription={headDescription}>\n      <section className=\"movies page__section fade-in\">\n        {renderPageContent()}\n      </section>\n    </BasePage>\n  );\n\n  // контейнер заглушки\n  function renderAnimatedContainer() {\n    return <AnimatedPageContainer titleText={textStubNoData} />;\n  }\n\n  // контейнер с фильмами\n  function renderMoviesContainer() {\n    if (!moviesPageData && !isLoading) {\n      return renderAnimatedContainer();\n    }\n    return (\n      <>\n        {isLoadingPaginate ? (\n          <Loader isPaginate />\n        ) : (\n          <ul className=\"movies__cards cards-grid cards-grid_content_small-cards fade-in\">\n            {moviesPageData.map((movie) => (\n              <li className=\"card-container scale-in\" key={movie.id}>\n                <CardFilm data={movie} />\n                <CardAnnotation description={movie.annotation} />\n              </li>\n            ))}\n          </ul>\n        )}\n\n        {pageCount > 1 && (\n          <Paginate\n            sectionClass=\"cards-section__pagination\"\n            pageCount={pageCount}\n            value={pageNumber}\n            onChange={setPageNumber}\n          />\n        )}\n      </>\n    );\n  }\n\n  // главная функция рендеринга\n  function renderPageContent() {\n    if (isPageError) {\n      return (\n        <AnimatedPageContainer\n          titleText={ERROR_MESSAGES.generalErrorMessage.title}\n        />\n      );\n    }\n    return (\n      <>\n        <TitleH1 title={title} sectionClass=\"movies__title\" />\n\n        {/* рендер фильтров */}\n        {categories?.length > 1 && (\n          <TagsList\n            filterList={categories}\n            name=\"tag\"\n            handleClick={changeCategory}\n          />\n        )}\n\n        {/* рендерим фильмы */}\n        {isFiltersUsed ? <Loader isPaginate /> : renderMoviesContainer()}\n      </>\n    );\n  }\n}\n\nexport default Movies;\n"],"sourceRoot":""}